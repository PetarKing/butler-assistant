name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Run Pylint and capture score
        id: pylint
        run: |
          . .venv/bin/activate
          # Run pylint, but don’t fail the shell; we’ll control fail logic below
          pylint main.py services/ tools/ utils/ > pylint.out || true
          # Extract the numeric score
          score=$(grep 'rated at' pylint.out \
                   | sed -E 's/.*rated at ([0-9]+\.[0-9]+)\/10.*/\1/')
          echo "Pylint score is $score/10"
          echo "::set-output name=score::$score"

    - name: Enforce minimum score
      run: |
        required=8.0
        actual=${{ steps.pylint.outputs.score }}
        # Compare via awk (floating-point safe)
        awk "BEGIN { if ($actual < $required) exit 1; }"
