# =============================================================================
# Butler Agent Configuration
# =============================================================================
# Copy this file to .env and update the values as needed for your setup.

# -----------------------------------------------------------------------------
# OpenAI API Configuration
# -----------------------------------------------------------------------------
OPENAI_API_KEY={YOUR_OPENAI_API_KEY}

# Primary model for conversation and tool calling
OPENAI_MODEL=o4-mini-2025-04-16

# High-capability model for complex tasks
OPENAI_MODEL_HIGH=o3-2025-04-16

# Cost-effective model for simple operations
CHEAP_MODEL=gpt-4.1-mini-2025-04-14

# -----------------------------------------------------------------------------
# Text-to-Speech (TTS) Configuration
# -----------------------------------------------------------------------------
OPENAI_TTS_MODEL=gpt-4o-mini-tts

# Voice selection: ash, onyx, alloy, echo, fable, nova, shimmer
OPENAI_TTS_VOICE=ash

# -----------------------------------------------------------------------------
# Speech-to-Text (STT) Configuration
# -----------------------------------------------------------------------------
OPENAI_STT_MODEL=gpt-4o-mini-transcribe

# -----------------------------------------------------------------------------
# Voice Activity Detection (VAD) Settings
# -----------------------------------------------------------------------------
# Frame duration in milliseconds (must be 10, 20, or 30)
VAD_FRAME_MS=30

# VAD sensitivity level (0=least sensitive, 3=most sensitive)
VAD_AGGRESSIVENESS=2

# Seconds of silence before ending recording
TRAILING_SILENCE_SEC=1.5

# Maximum recording duration in seconds
MAX_RECORD_SEC=90

# Timeout for user input before agent goes idle (seconds)
IDLE_TIMEOUT_SEC=10

# Enable detailed audio processing logs for debugging
DEBUG_AUDIO=false

# Energy threshold for removing leading silence from recordings
ENERGY_THRESHOLD=300

# -----------------------------------------------------------------------------
# Audio Feedback Configuration
# -----------------------------------------------------------------------------
# Path to waiting music file (played while agent is processing)
WAITING_WAV=waiting.wav

# Volume level for waiting music (0.0 to 1.0)
WAITING_VOLUME=0.3

# -----------------------------------------------------------------------------
# Obsidian Integration
# -----------------------------------------------------------------------------
# Enable Obsidian note-taking and knowledge management tools
INCLUDE_OBSIDIAN_TOOLS=true

# Path to your Obsidian vault directory
OBSIDIAN_VAULT_PATH={YOUR_OBSIDIAN_VAULT_PATH}

# Folder name within the vault for agent-related notes
AGENT_FOLDER_NAME=Butler

# Assistant's and User's names (used in greetings and file naming)
ASSISTANT_NAME=Sebastian
USER_NAME=User

# Prefix for session summary files
SESSION_SUMMARY_PREFIX=session-summary-

# Filename for tool call logs
TOOL_CALL_FILE_NAME=tool-calls.md

# -----------------------------------------------------------------------------
# External Tools Integration
# -----------------------------------------------------------------------------
# Comma-separated list of LangChain community tools to load
# Available tools: https://python.langchain.com/docs/integrations/tools/
COMMUNITY_TOOLS_TO_LOAD=ArxivQueryRun
# Example: ArxivQueryRun + Fallback Web Search
# COMMUNITY_TOOLS_TO_LOAD=ArxivQueryRun,BraveSearch
# BRAVE_SEARCH_API_KEY={YOUR_BRAVE_API_KEY}

# Whether MCP (Model-Context-Protocol) should be loaded
USE_MCP_TOOLS=false
# < Settings for MCP tools >
# Example Pipedream URL for Tavily integration
PIPEDREAM_TAVILY_URL={YOUR_PIPEDREAM_TAVILY_URL}

# -----------------------------------------------------------------------------
# RAG (Retrieval-Augmented Generation) Configuration
# -----------------------------------------------------------------------------
# Enable semantic search functionality
ENABLE_SEMANTIC_SEARCH=true

# Path to ChromaDB database for vector storage
CHROMA_DB_PATH=cached/obsidian_chroma_db

# Embedding model for semantic search (HuggingFace model name)
EMBEDDING_MODEL_NAME=thenlper/gte-large

# Number of top results to return from semantic search
SEMANTIC_SEARCH_K_VALUE=5

# -----------------------------------------------------------------------------
# Memory Management
# -----------------------------------------------------------------------------
# Enable persistent core memory between sessions
USE_CORE_MEMORY=true

# Filename for storing core memory data
CORE_MEMORY_FILENAME=_core_memory.md